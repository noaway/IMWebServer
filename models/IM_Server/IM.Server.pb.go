// Code generated by protoc-gen-go.
// source: IM.Server.proto
// DO NOT EDIT!

/*
Package IM_Server is a generated protocol buffer package.

It is generated from these files:
	IM.Server.proto

It has these top-level messages:
	IMStopReceivePacket
	IMValidateReq
	IMAccessTokenValidateReq
	IMValidateRsp
	IMGetDeviceTokenReq
	IMGetDeviceTokenRsp
	IMRoleSet
	IMOnlineUserInfo
	IMMsgServInfo
	IMUserStatusUpdate
	IMUserCntUpdate
	IMServerKickUser
	IMServerPCLoginStatusNotify
	IMPushToUserReq
	IMPushToUserRsp
	IMGroupGetShieldReq
	IMGroupGetShieldRsp
	IMFileTransferReq
	IMFileTransferRsp
	IMFileServerIPReq
	IMFileServerIPRsp
*/
package IM_Server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import "IMWebServer/models/IM_BaseDefine"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// db_proxy
type IMStopReceivePacket struct {
	// cmd id:   0x0702
	Result           *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMStopReceivePacket) Reset()                    { *m = IMStopReceivePacket{} }
func (m *IMStopReceivePacket) String() string            { return proto.CompactTextString(m) }
func (*IMStopReceivePacket) ProtoMessage()               {}
func (*IMStopReceivePacket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IMStopReceivePacket) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// db_proxy
type IMValidateReq struct {
	// cmd id:	0x0703
	UserName         *string `protobuf:"bytes,1,req,name=user_name" json:"user_name,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	DeviceId         *string `protobuf:"bytes,3,req,name=device_id" json:"device_id,omitempty"`
	AttachData       []byte  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMValidateReq) Reset()                    { *m = IMValidateReq{} }
func (m *IMValidateReq) String() string            { return proto.CompactTextString(m) }
func (*IMValidateReq) ProtoMessage()               {}
func (*IMValidateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IMValidateReq) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *IMValidateReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *IMValidateReq) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *IMValidateReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// db_proxy
type IMAccessTokenValidateReq struct {
	// cmd id:	0x0735
	AccessToken      *string `protobuf:"bytes,1,req,name=access_token" json:"access_token,omitempty"`
	AttachData       []byte  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMAccessTokenValidateReq) Reset()                    { *m = IMAccessTokenValidateReq{} }
func (m *IMAccessTokenValidateReq) String() string            { return proto.CompactTextString(m) }
func (*IMAccessTokenValidateReq) ProtoMessage()               {}
func (*IMAccessTokenValidateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IMAccessTokenValidateReq) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

func (m *IMAccessTokenValidateReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// db_proxy
type IMValidateRsp struct {
	// cmd id:	0x0704
	UserName         *string                 `protobuf:"bytes,1,req,name=user_name" json:"user_name,omitempty"`
	ResultCode       *uint32                 `protobuf:"varint,2,req,name=result_code" json:"result_code,omitempty"`
	ResultString     *string                 `protobuf:"bytes,3,opt,name=result_string" json:"result_string,omitempty"`
	UserInfo         *IM_BaseDefine.UserInfo `protobuf:"bytes,4,opt,name=user_info" json:"user_info,omitempty"`
	AccessToken      *string                 `protobuf:"bytes,5,opt,name=access_token" json:"access_token,omitempty"`
	AttachData       []byte                  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IMValidateRsp) Reset()                    { *m = IMValidateRsp{} }
func (m *IMValidateRsp) String() string            { return proto.CompactTextString(m) }
func (*IMValidateRsp) ProtoMessage()               {}
func (*IMValidateRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IMValidateRsp) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *IMValidateRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMValidateRsp) GetResultString() string {
	if m != nil && m.ResultString != nil {
		return *m.ResultString
	}
	return ""
}

func (m *IMValidateRsp) GetUserInfo() *IM_BaseDefine.UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *IMValidateRsp) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

func (m *IMValidateRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// db_proxy
type IMGetDeviceTokenReq struct {
	// cmd id:	0x0705
	UserId           []uint32 `protobuf:"varint,1,rep,name=user_id" json:"user_id,omitempty"`
	AttachData       []byte   `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IMGetDeviceTokenReq) Reset()                    { *m = IMGetDeviceTokenReq{} }
func (m *IMGetDeviceTokenReq) String() string            { return proto.CompactTextString(m) }
func (*IMGetDeviceTokenReq) ProtoMessage()               {}
func (*IMGetDeviceTokenReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *IMGetDeviceTokenReq) GetUserId() []uint32 {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *IMGetDeviceTokenReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// db_proxy
type IMGetDeviceTokenRsp struct {
	// cmd id:	0x0706
	UserTokenInfo    []*IM_BaseDefine.UserTokenInfo `protobuf:"bytes,1,rep,name=user_token_info" json:"user_token_info,omitempty"`
	AttachData       []byte                         `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMGetDeviceTokenRsp) Reset()                    { *m = IMGetDeviceTokenRsp{} }
func (m *IMGetDeviceTokenRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGetDeviceTokenRsp) ProtoMessage()               {}
func (*IMGetDeviceTokenRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *IMGetDeviceTokenRsp) GetUserTokenInfo() []*IM_BaseDefine.UserTokenInfo {
	if m != nil {
		return m.UserTokenInfo
	}
	return nil
}

func (m *IMGetDeviceTokenRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMRoleSet struct {
	// cmd id:	0x0707
	Master           *uint32 `protobuf:"varint,1,req,name=master" json:"master,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMRoleSet) Reset()                    { *m = IMRoleSet{} }
func (m *IMRoleSet) String() string            { return proto.CompactTextString(m) }
func (*IMRoleSet) ProtoMessage()               {}
func (*IMRoleSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *IMRoleSet) GetMaster() uint32 {
	if m != nil && m.Master != nil {
		return *m.Master
	}
	return 0
}

type IMOnlineUserInfo struct {
	// cmd id:	0x0708
	UserStatList     []*IM_BaseDefine.ServerUserStat `protobuf:"bytes,1,rep,name=user_stat_list" json:"user_stat_list,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *IMOnlineUserInfo) Reset()                    { *m = IMOnlineUserInfo{} }
func (m *IMOnlineUserInfo) String() string            { return proto.CompactTextString(m) }
func (*IMOnlineUserInfo) ProtoMessage()               {}
func (*IMOnlineUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *IMOnlineUserInfo) GetUserStatList() []*IM_BaseDefine.ServerUserStat {
	if m != nil {
		return m.UserStatList
	}
	return nil
}

type IMMsgServInfo struct {
	// cmd id:	0x0709
	Ip1              *string `protobuf:"bytes,1,req,name=ip1" json:"ip1,omitempty"`
	Ip2              *string `protobuf:"bytes,2,req,name=ip2" json:"ip2,omitempty"`
	Port             *uint32 `protobuf:"varint,3,req,name=port" json:"port,omitempty"`
	WebimPort        *uint32 `protobuf:"varint,4,req,name=webim_port" json:"webim_port,omitempty"`
	MaxConnCnt       *uint32 `protobuf:"varint,5,req,name=max_conn_cnt" json:"max_conn_cnt,omitempty"`
	CurConnCnt       *uint32 `protobuf:"varint,6,req,name=cur_conn_cnt" json:"cur_conn_cnt,omitempty"`
	HostName         *string `protobuf:"bytes,7,req,name=host_name" json:"host_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMMsgServInfo) Reset()                    { *m = IMMsgServInfo{} }
func (m *IMMsgServInfo) String() string            { return proto.CompactTextString(m) }
func (*IMMsgServInfo) ProtoMessage()               {}
func (*IMMsgServInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *IMMsgServInfo) GetIp1() string {
	if m != nil && m.Ip1 != nil {
		return *m.Ip1
	}
	return ""
}

func (m *IMMsgServInfo) GetIp2() string {
	if m != nil && m.Ip2 != nil {
		return *m.Ip2
	}
	return ""
}

func (m *IMMsgServInfo) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *IMMsgServInfo) GetWebimPort() uint32 {
	if m != nil && m.WebimPort != nil {
		return *m.WebimPort
	}
	return 0
}

func (m *IMMsgServInfo) GetMaxConnCnt() uint32 {
	if m != nil && m.MaxConnCnt != nil {
		return *m.MaxConnCnt
	}
	return 0
}

func (m *IMMsgServInfo) GetCurConnCnt() uint32 {
	if m != nil && m.CurConnCnt != nil {
		return *m.CurConnCnt
	}
	return 0
}

func (m *IMMsgServInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

type IMUserStatusUpdate struct {
	// cmd id:	0x070a
	UserStatus       *uint32                   `protobuf:"varint,1,req,name=user_status" json:"user_status,omitempty"`
	UserId           *uint32                   `protobuf:"varint,2,req,name=user_id" json:"user_id,omitempty"`
	ClientType       *IM_BaseDefine.ClientType `protobuf:"varint,3,req,name=client_type,enum=IM.BaseDefine.ClientType" json:"client_type,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *IMUserStatusUpdate) Reset()                    { *m = IMUserStatusUpdate{} }
func (m *IMUserStatusUpdate) String() string            { return proto.CompactTextString(m) }
func (*IMUserStatusUpdate) ProtoMessage()               {}
func (*IMUserStatusUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *IMUserStatusUpdate) GetUserStatus() uint32 {
	if m != nil && m.UserStatus != nil {
		return *m.UserStatus
	}
	return 0
}

func (m *IMUserStatusUpdate) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMUserStatusUpdate) GetClientType() IM_BaseDefine.ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return IM_BaseDefine.ClientType_CLIENT_TYPE_WINDOWS
}

type IMUserCntUpdate struct {
	// cmd id:	0x070b
	UserAction       *uint32 `protobuf:"varint,1,req,name=user_action" json:"user_action,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,req,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMUserCntUpdate) Reset()                    { *m = IMUserCntUpdate{} }
func (m *IMUserCntUpdate) String() string            { return proto.CompactTextString(m) }
func (*IMUserCntUpdate) ProtoMessage()               {}
func (*IMUserCntUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *IMUserCntUpdate) GetUserAction() uint32 {
	if m != nil && m.UserAction != nil {
		return *m.UserAction
	}
	return 0
}

func (m *IMUserCntUpdate) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type IMServerKickUser struct {
	// cmd id:	0x070d
	UserId           *uint32                   `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	ClientType       *IM_BaseDefine.ClientType `protobuf:"varint,2,req,name=client_type,enum=IM.BaseDefine.ClientType" json:"client_type,omitempty"`
	Reason           *uint32                   `protobuf:"varint,3,req,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *IMServerKickUser) Reset()                    { *m = IMServerKickUser{} }
func (m *IMServerKickUser) String() string            { return proto.CompactTextString(m) }
func (*IMServerKickUser) ProtoMessage()               {}
func (*IMServerKickUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *IMServerKickUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMServerKickUser) GetClientType() IM_BaseDefine.ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return IM_BaseDefine.ClientType_CLIENT_TYPE_WINDOWS
}

func (m *IMServerKickUser) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type IMServerPCLoginStatusNotify struct {
	// cmd id:	0x070e
	UserId           *uint32 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	LoginStatus      *uint32 `protobuf:"varint,2,req,name=login_status" json:"login_status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMServerPCLoginStatusNotify) Reset()                    { *m = IMServerPCLoginStatusNotify{} }
func (m *IMServerPCLoginStatusNotify) String() string            { return proto.CompactTextString(m) }
func (*IMServerPCLoginStatusNotify) ProtoMessage()               {}
func (*IMServerPCLoginStatusNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *IMServerPCLoginStatusNotify) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMServerPCLoginStatusNotify) GetLoginStatus() uint32 {
	if m != nil && m.LoginStatus != nil {
		return *m.LoginStatus
	}
	return 0
}

type IMPushToUserReq struct {
	// cmd id:	0x070f
	Flash            *string                        `protobuf:"bytes,1,req,name=flash" json:"flash,omitempty"`
	Data             *string                        `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	UserTokenList    []*IM_BaseDefine.UserTokenInfo `protobuf:"bytes,3,rep,name=user_token_list" json:"user_token_list,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMPushToUserReq) Reset()                    { *m = IMPushToUserReq{} }
func (m *IMPushToUserReq) String() string            { return proto.CompactTextString(m) }
func (*IMPushToUserReq) ProtoMessage()               {}
func (*IMPushToUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *IMPushToUserReq) GetFlash() string {
	if m != nil && m.Flash != nil {
		return *m.Flash
	}
	return ""
}

func (m *IMPushToUserReq) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func (m *IMPushToUserReq) GetUserTokenList() []*IM_BaseDefine.UserTokenInfo {
	if m != nil {
		return m.UserTokenList
	}
	return nil
}

type IMPushToUserRsp struct {
	// cmd id:	0x0710
	PushResultList   []*IM_BaseDefine.PushResult `protobuf:"bytes,1,rep,name=push_result_list" json:"push_result_list,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *IMPushToUserRsp) Reset()                    { *m = IMPushToUserRsp{} }
func (m *IMPushToUserRsp) String() string            { return proto.CompactTextString(m) }
func (*IMPushToUserRsp) ProtoMessage()               {}
func (*IMPushToUserRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *IMPushToUserRsp) GetPushResultList() []*IM_BaseDefine.PushResult {
	if m != nil {
		return m.PushResultList
	}
	return nil
}

type IMGroupGetShieldReq struct {
	// cmd id:			0x0711
	GroupId          *uint32  `protobuf:"varint,1,req,name=group_id" json:"group_id,omitempty"`
	UserId           []uint32 `protobuf:"varint,2,rep,name=user_id" json:"user_id,omitempty"`
	AttachData       []byte   `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IMGroupGetShieldReq) Reset()                    { *m = IMGroupGetShieldReq{} }
func (m *IMGroupGetShieldReq) String() string            { return proto.CompactTextString(m) }
func (*IMGroupGetShieldReq) ProtoMessage()               {}
func (*IMGroupGetShieldReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *IMGroupGetShieldReq) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupGetShieldReq) GetUserId() []uint32 {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *IMGroupGetShieldReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupGetShieldRsp struct {
	// cmd id: 			0x0712
	GroupId          *uint32                       `protobuf:"varint,1,req,name=group_id" json:"group_id,omitempty"`
	ShieldStatusList []*IM_BaseDefine.ShieldStatus `protobuf:"bytes,2,rep,name=shield_status_list" json:"shield_status_list,omitempty"`
	AttachData       []byte                        `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *IMGroupGetShieldRsp) Reset()                    { *m = IMGroupGetShieldRsp{} }
func (m *IMGroupGetShieldRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGroupGetShieldRsp) ProtoMessage()               {}
func (*IMGroupGetShieldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *IMGroupGetShieldRsp) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupGetShieldRsp) GetShieldStatusList() []*IM_BaseDefine.ShieldStatus {
	if m != nil {
		return m.ShieldStatusList
	}
	return nil
}

func (m *IMGroupGetShieldRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMFileTransferReq struct {
	// cmd id:			0x0715
	FromUserId       *uint32                 `protobuf:"varint,1,req,name=from_user_id" json:"from_user_id,omitempty"`
	ToUserId         *uint32                 `protobuf:"varint,2,req,name=to_user_id" json:"to_user_id,omitempty"`
	FileName         *string                 `protobuf:"bytes,3,req,name=file_name" json:"file_name,omitempty"`
	FileSize         *uint32                 `protobuf:"varint,4,req,name=file_size" json:"file_size,omitempty"`
	TransMode        *IM_BaseDefine.FileType `protobuf:"varint,5,req,name=trans_mode,enum=IM.BaseDefine.FileType" json:"trans_mode,omitempty"`
	AttachData       []byte                  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IMFileTransferReq) Reset()                    { *m = IMFileTransferReq{} }
func (m *IMFileTransferReq) String() string            { return proto.CompactTextString(m) }
func (*IMFileTransferReq) ProtoMessage()               {}
func (*IMFileTransferReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *IMFileTransferReq) GetFromUserId() uint32 {
	if m != nil && m.FromUserId != nil {
		return *m.FromUserId
	}
	return 0
}

func (m *IMFileTransferReq) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

func (m *IMFileTransferReq) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *IMFileTransferReq) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *IMFileTransferReq) GetTransMode() IM_BaseDefine.FileType {
	if m != nil && m.TransMode != nil {
		return *m.TransMode
	}
	return IM_BaseDefine.FileType_FILE_TYPE_ONLINE
}

func (m *IMFileTransferReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMFileTransferRsp struct {
	// cmd id:			0x0716
	ResultCode       *uint32                 `protobuf:"varint,1,req,name=result_code" json:"result_code,omitempty"`
	FromUserId       *uint32                 `protobuf:"varint,2,req,name=from_user_id" json:"from_user_id,omitempty"`
	ToUserId         *uint32                 `protobuf:"varint,3,req,name=to_user_id" json:"to_user_id,omitempty"`
	FileName         *string                 `protobuf:"bytes,4,opt,name=file_name" json:"file_name,omitempty"`
	FileSize         *uint32                 `protobuf:"varint,5,opt,name=file_size" json:"file_size,omitempty"`
	TaskId           *string                 `protobuf:"bytes,6,opt,name=task_id" json:"task_id,omitempty"`
	TransMode        *IM_BaseDefine.FileType `protobuf:"varint,7,opt,name=trans_mode,enum=IM.BaseDefine.FileType" json:"trans_mode,omitempty"`
	AttachData       []byte                  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IMFileTransferRsp) Reset()                    { *m = IMFileTransferRsp{} }
func (m *IMFileTransferRsp) String() string            { return proto.CompactTextString(m) }
func (*IMFileTransferRsp) ProtoMessage()               {}
func (*IMFileTransferRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *IMFileTransferRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMFileTransferRsp) GetFromUserId() uint32 {
	if m != nil && m.FromUserId != nil {
		return *m.FromUserId
	}
	return 0
}

func (m *IMFileTransferRsp) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

func (m *IMFileTransferRsp) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *IMFileTransferRsp) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *IMFileTransferRsp) GetTaskId() string {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return ""
}

func (m *IMFileTransferRsp) GetTransMode() IM_BaseDefine.FileType {
	if m != nil && m.TransMode != nil {
		return *m.TransMode
	}
	return IM_BaseDefine.FileType_FILE_TYPE_ONLINE
}

func (m *IMFileTransferRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMFileServerIPReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *IMFileServerIPReq) Reset()                    { *m = IMFileServerIPReq{} }
func (m *IMFileServerIPReq) String() string            { return proto.CompactTextString(m) }
func (*IMFileServerIPReq) ProtoMessage()               {}
func (*IMFileServerIPReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type IMFileServerIPRsp struct {
	// cmd id:			0x0718
	IpAddrList       []*IM_BaseDefine.IpAddr `protobuf:"bytes,1,rep,name=ip_addr_list" json:"ip_addr_list,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IMFileServerIPRsp) Reset()                    { *m = IMFileServerIPRsp{} }
func (m *IMFileServerIPRsp) String() string            { return proto.CompactTextString(m) }
func (*IMFileServerIPRsp) ProtoMessage()               {}
func (*IMFileServerIPRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *IMFileServerIPRsp) GetIpAddrList() []*IM_BaseDefine.IpAddr {
	if m != nil {
		return m.IpAddrList
	}
	return nil
}

func init() {
	proto.RegisterType((*IMStopReceivePacket)(nil), "IM.Server.IMStopReceivePacket")
	proto.RegisterType((*IMValidateReq)(nil), "IM.Server.IMValidateReq")
	proto.RegisterType((*IMAccessTokenValidateReq)(nil), "IM.Server.IMAccessTokenValidateReq")
	proto.RegisterType((*IMValidateRsp)(nil), "IM.Server.IMValidateRsp")
	proto.RegisterType((*IMGetDeviceTokenReq)(nil), "IM.Server.IMGetDeviceTokenReq")
	proto.RegisterType((*IMGetDeviceTokenRsp)(nil), "IM.Server.IMGetDeviceTokenRsp")
	proto.RegisterType((*IMRoleSet)(nil), "IM.Server.IMRoleSet")
	proto.RegisterType((*IMOnlineUserInfo)(nil), "IM.Server.IMOnlineUserInfo")
	proto.RegisterType((*IMMsgServInfo)(nil), "IM.Server.IMMsgServInfo")
	proto.RegisterType((*IMUserStatusUpdate)(nil), "IM.Server.IMUserStatusUpdate")
	proto.RegisterType((*IMUserCntUpdate)(nil), "IM.Server.IMUserCntUpdate")
	proto.RegisterType((*IMServerKickUser)(nil), "IM.Server.IMServerKickUser")
	proto.RegisterType((*IMServerPCLoginStatusNotify)(nil), "IM.Server.IMServerPCLoginStatusNotify")
	proto.RegisterType((*IMPushToUserReq)(nil), "IM.Server.IMPushToUserReq")
	proto.RegisterType((*IMPushToUserRsp)(nil), "IM.Server.IMPushToUserRsp")
	proto.RegisterType((*IMGroupGetShieldReq)(nil), "IM.Server.IMGroupGetShieldReq")
	proto.RegisterType((*IMGroupGetShieldRsp)(nil), "IM.Server.IMGroupGetShieldRsp")
	proto.RegisterType((*IMFileTransferReq)(nil), "IM.Server.IMFileTransferReq")
	proto.RegisterType((*IMFileTransferRsp)(nil), "IM.Server.IMFileTransferRsp")
	proto.RegisterType((*IMFileServerIPReq)(nil), "IM.Server.IMFileServerIPReq")
	proto.RegisterType((*IMFileServerIPRsp)(nil), "IM.Server.IMFileServerIPRsp")
}

var fileDescriptor0 = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x85, 0x2e, 0xb6, 0xeb, 0x95, 0xe4, 0x0b, 0x6d, 0xa3, 0x6a, 0xdd, 0x02, 0x06, 0x81, 0x02,
	0x46, 0x0d, 0x08, 0xa8, 0x0a, 0xc3, 0x0f, 0x79, 0x89, 0x2f, 0x71, 0x42, 0x24, 0x4c, 0x04, 0x49,
	0xce, 0x53, 0x00, 0x62, 0x43, 0xae, 0xa4, 0x8d, 0x28, 0x2e, 0xc3, 0x5d, 0xda, 0x71, 0x3e, 0x21,
	0xff, 0x91, 0xaf, 0xc9, 0x4f, 0x65, 0x76, 0x96, 0x92, 0x45, 0x8a, 0x86, 0x91, 0x37, 0xe9, 0x70,
	0x66, 0xce, 0x99, 0x99, 0x33, 0x4b, 0xb6, 0x1d, 0xb7, 0x33, 0x60, 0xc9, 0x2d, 0x4b, 0x3a, 0x71,
	0x22, 0x94, 0xb0, 0x36, 0x17, 0xc0, 0x9f, 0x7b, 0xf0, 0xf3, 0x82, 0x4a, 0x76, 0xc5, 0x46, 0x3c,
	0x62, 0xe6, 0xbb, 0xfd, 0x0f, 0x01, 0x78, 0xa0, 0x44, 0xdc, 0x67, 0x3e, 0xe3, 0xb7, 0xac, 0x47,
	0xfd, 0x29, 0x53, 0xd6, 0x16, 0x59, 0x4f, 0x98, 0x4c, 0x43, 0xd5, 0xae, 0x1c, 0x55, 0x8f, 0x5b,
	0xf6, 0x07, 0xd2, 0x72, 0xdc, 0xf7, 0x34, 0xe4, 0x01, 0x55, 0xac, 0xcf, 0x3e, 0x5b, 0xbb, 0x64,
	0x33, 0x95, 0x2c, 0xf1, 0x22, 0x3a, 0x63, 0x18, 0xb3, 0x69, 0xed, 0x90, 0xdf, 0x62, 0x2a, 0xe5,
	0x9d, 0x48, 0x82, 0x76, 0x15, 0x11, 0x08, 0x0a, 0xd8, 0x2d, 0xf7, 0x99, 0xc7, 0x83, 0x76, 0x0d,
	0xa1, 0x3d, 0xd2, 0xa0, 0x4a, 0x51, 0x7f, 0xe2, 0x41, 0x25, 0xda, 0xde, 0x3f, 0xaa, 0x1c, 0x37,
	0xed, 0x17, 0xa4, 0xed, 0xb8, 0xe7, 0xbe, 0xcf, 0xa4, 0x1c, 0x8a, 0x29, 0x8b, 0x96, 0x89, 0xf6,
	0x49, 0x93, 0xe2, 0x17, 0x4f, 0xe9, 0x4f, 0x19, 0x57, 0x69, 0x99, 0xef, 0x95, 0x9c, 0x4a, 0x19,
	0x97, 0xa9, 0x84, 0x4c, 0xd3, 0x99, 0xe7, 0x8b, 0x80, 0xa1, 0xd0, 0x96, 0x75, 0x40, 0x5a, 0x19,
	0x28, 0x55, 0xc2, 0xa3, 0x31, 0x88, 0xad, 0x40, 0xec, 0xbf, 0x59, 0x3a, 0x8f, 0x46, 0xa2, 0x5d,
	0x07, 0xa8, 0xd1, 0xfd, 0xbd, 0x93, 0x9f, 0xe2, 0x0d, 0x7c, 0x77, 0xe0, 0xf3, 0x8a, 0xce, 0x35,
	0xac, 0x50, 0xaa, 0xf3, 0x99, 0x9e, 0xf9, 0x4b, 0xa6, 0xae, 0x70, 0x36, 0xd8, 0xb1, 0xee, 0x74,
	0x9b, 0x6c, 0x18, 0xb6, 0x00, 0xa4, 0xd6, 0x40, 0x55, 0x69, 0x32, 0x2d, 0x49, 0x86, 0x4e, 0x4f,
	0xc9, 0x36, 0x26, 0x23, 0xb9, 0x11, 0xac, 0x8b, 0x34, 0xba, 0x7f, 0x95, 0x08, 0xc6, 0x2c, 0x54,
	0x5d, 0x4a, 0x71, 0x48, 0xc0, 0x35, 0x7d, 0x11, 0xb2, 0x81, 0x71, 0xc2, 0x8c, 0x4a, 0xc5, 0x92,
	0xcc, 0x09, 0x0e, 0xd9, 0x71, 0xdc, 0x77, 0x51, 0x08, 0xb5, 0x16, 0xbd, 0x9f, 0x92, 0x2d, 0x24,
	0x97, 0x8a, 0x2a, 0x2f, 0xe4, 0x52, 0x65, 0xdc, 0x7f, 0x17, 0xb8, 0x8d, 0x11, 0x75, 0xda, 0x00,
	0x22, 0xed, 0x6f, 0xb8, 0x2f, 0x57, 0x8e, 0x35, 0x8e, 0x85, 0x1a, 0xa4, 0xc6, 0xe3, 0xff, 0xb2,
	0x4d, 0xe1, 0x9f, 0x6e, 0x66, 0xa5, 0x26, 0xa9, 0xc7, 0x22, 0x51, 0xe8, 0xa2, 0x96, 0x65, 0x11,
	0x72, 0xc7, 0x3e, 0xf2, 0x99, 0x87, 0x58, 0x1d, 0x31, 0x58, 0xc0, 0x8c, 0x7e, 0x81, 0xad, 0x46,
	0x91, 0xe7, 0x47, 0x0a, 0x16, 0x90, 0xa1, 0x7e, 0x9a, 0x3c, 0xa0, 0xeb, 0x88, 0x82, 0x2f, 0x26,
	0x42, 0x2a, 0xe3, 0x8b, 0x0d, 0x4d, 0x60, 0x7f, 0x22, 0x96, 0xe3, 0xce, 0xa5, 0xa5, 0xf2, 0x26,
	0xd6, 0x1e, 0xd2, 0xf3, 0x59, 0x74, 0x96, 0x4a, 0x33, 0x82, 0xe5, 0x45, 0x19, 0xfb, 0x74, 0x48,
	0xc3, 0x0f, 0x39, 0x8b, 0x94, 0xa7, 0xee, 0x63, 0x86, 0x1a, 0xb7, 0xba, 0x7f, 0x14, 0x9a, 0xbf,
	0xc4, 0x88, 0x21, 0x04, 0xd8, 0x67, 0xfa, 0x4e, 0x35, 0xd7, 0x65, 0xa4, 0x0a, 0x44, 0xd4, 0x57,
	0x5c, 0x44, 0x8f, 0x10, 0xd9, 0xbe, 0x1e, 0xbe, 0x99, 0xe2, 0x6b, 0xee, 0x4f, 0x75, 0x89, 0xbc,
	0x6d, 0x4a, 0xd4, 0x54, 0x9f, 0x50, 0x63, 0x6e, 0x9d, 0x4a, 0x60, 0xc5, 0xe1, 0xda, 0x57, 0xe4,
	0x70, 0x4e, 0xd2, 0xbb, 0x7c, 0x23, 0xc6, 0x3c, 0x32, 0x23, 0x79, 0x2b, 0x14, 0x1f, 0xdd, 0xaf,
	0xf2, 0xc1, 0x88, 0x43, 0x1d, 0x35, 0x1f, 0x92, 0x91, 0xca, 0x74, 0x8f, 0xbd, 0x54, 0x4e, 0x86,
	0x42, 0xcb, 0xd4, 0x06, 0x6f, 0x91, 0xb5, 0x51, 0x48, 0xe5, 0x24, 0xdb, 0x2f, 0xac, 0x14, 0x4d,
	0x67, 0x16, 0x9c, 0x37, 0x30, 0x9a, 0xa8, 0xf6, 0xb4, 0x81, 0xed, 0xeb, 0x02, 0x0d, 0x9c, 0xc2,
	0xff, 0x64, 0x27, 0x06, 0xc0, 0xcb, 0x2e, 0x7a, 0xc9, 0x8f, 0xc5, 0x21, 0xe8, 0xbc, 0x3e, 0x46,
	0xd9, 0x2e, 0x9e, 0x55, 0x22, 0xd2, 0x18, 0x6e, 0x6b, 0x30, 0xe1, 0x2c, 0x0c, 0xb4, 0x64, 0x78,
	0xd3, 0xc6, 0x1a, 0x7c, 0xe8, 0x36, 0xb7, 0x93, 0x47, 0xaf, 0x34, 0x2d, 0x29, 0x07, 0xd2, 0x56,
	0xcb, 0x9d, 0x11, 0x4b, 0xe2, 0xe7, 0x6c, 0x7a, 0x46, 0x6e, 0x15, 0xe5, 0x1e, 0x16, 0xcf, 0x07,
	0x03, 0xcd, 0x32, 0x1e, 0x7d, 0x01, 0x77, 0x1d, 0xf7, 0x9a, 0x87, 0x6c, 0x98, 0xd0, 0x48, 0x8e,
	0xcc, 0xdc, 0x61, 0x41, 0xa3, 0x44, 0xcc, 0xbc, 0xfc, 0xda, 0xe0, 0x86, 0x94, 0xf0, 0xf2, 0x46,
	0x86, 0xbb, 0x18, 0x41, 0xb2, 0xb9, 0x8b, 0xda, 0xfc, 0x0d, 0x47, 0x48, 0xf2, 0xaf, 0x2c, 0xbb,
	0xb4, 0x13, 0xc8, 0xd4, 0xe5, 0xbd, 0x99, 0x7e, 0x41, 0xd7, 0xd0, 0x5f, 0xc5, 0x77, 0x11, 0x35,
	0x68, 0x77, 0x95, 0xea, 0xfc, 0xb1, 0xaa, 0x13, 0xa6, 0x53, 0x78, 0x9a, 0x17, 0xee, 0xca, 0x89,
	0xaf, 0x96, 0x88, 0xaf, 0xad, 0x8a, 0xaf, 0xe3, 0xf3, 0x9b, 0x13, 0xaf, 0x5f, 0x64, 0xdc, 0x9f,
	0xa2, 0x72, 0xaa, 0xd3, 0xd6, 0x31, 0x26, 0xdf, 0xcd, 0x06, 0x60, 0xbf, 0xda, 0xcd, 0xde, 0xbc,
	0x19, 0x73, 0x34, 0x4e, 0x0f, 0x86, 0x6e, 0x3f, 0x5f, 0x01, 0xa1, 0xc3, 0x13, 0xd2, 0xe4, 0xb1,
	0x47, 0x83, 0x20, 0x59, 0xb6, 0xe5, 0x41, 0x81, 0xcd, 0x89, 0xcf, 0x21, 0xe2, 0xa2, 0xfa, 0xaa,
	0xf6, 0x33, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x0e, 0x61, 0xaa, 0xd0, 0x07, 0x00, 0x00,
}
